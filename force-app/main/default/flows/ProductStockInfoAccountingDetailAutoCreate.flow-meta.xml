<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>GetTargetTermCycleEndDate</name>
        <label>期制終了日を取得</label>
        <locationX>1634</locationX>
        <locationY>755</locationY>
        <actionName>GetTargetTermDateHandler</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Indexpp</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>args</name>
            <value>
                <elementReference>Args</elementReference>
            </value>
        </inputParameters>
        <nameSegment>GetTargetTermDateHandler</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>TermCycleEndDate</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>GetTargetTermCycleStartDate</name>
        <label>期制開始日を取得</label>
        <locationX>1370</locationX>
        <locationY>755</locationY>
        <actionName>GetTargetTermDateHandler</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Indexpp</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>args</name>
            <value>
                <elementReference>Args</elementReference>
            </value>
        </inputParameters>
        <nameSegment>GetTargetTermDateHandler</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>TermCycleStartDate</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>GetTargetTermEndDate</name>
        <label>期終了日を取得</label>
        <locationX>2162</locationX>
        <locationY>755</locationY>
        <actionName>GetTargetTermDateHandler</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Indexpp</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>args</name>
            <value>
                <elementReference>Args</elementReference>
            </value>
        </inputParameters>
        <nameSegment>GetTargetTermDateHandler</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>TermEndDate</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <actionCalls>
        <name>GetTermStartDate</name>
        <label>期開始日を取得</label>
        <locationX>1898</locationX>
        <locationY>755</locationY>
        <actionName>GetTargetTermDateHandler</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Indexpp</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>args</name>
            <value>
                <elementReference>Args</elementReference>
            </value>
        </inputParameters>
        <nameSegment>GetTargetTermDateHandler</nameSegment>
        <offset>0</offset>
        <outputParameters>
            <assignToReference>TermStartDate</assignToReference>
            <name>output</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>AddToArrived</name>
        <label>入庫済み数に追加</label>
        <locationX>930</locationX>
        <locationY>1487</locationY>
        <assignmentItems>
            <assignToReference>ArrivedQuantity</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>ArrivedQuantityLoop.ArrivalQuantity__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>ArrivedQuantityLoop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AddToDeleteList</name>
        <label>削除リストに追加</label>
        <locationX>666</locationX>
        <locationY>2627</locationY>
        <assignmentItems>
            <assignToReference>DeleteList</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>DeleteListLoop</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>DeleteListLoop</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>ArgsClear</name>
        <label>パラメータをクリア</label>
        <locationX>1766</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>Args</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CreateArgs</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>CreateArgs</name>
        <label>パラメータを作る</label>
        <locationX>1766</locationX>
        <locationY>539</locationY>
        <assignmentItems>
            <assignToReference>Args</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>StringDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Args</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>;</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Args</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Account__r.ClosingDate__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Args</assignToReference>
            <operator>Add</operator>
            <value>
                <stringValue>;</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Args</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>ResultTypeArg</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetDateSplit</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Indexpp</name>
        <label>Index++</label>
        <locationX>1766</locationX>
        <locationY>947</locationY>
        <assignmentItems>
            <assignToReference>Index</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <isGoTo>true</isGoTo>
            <targetReference>ResultTypeArgCheck</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>InputDetail</name>
        <label>入庫料の明細を入力</label>
        <locationX>842</locationX>
        <locationY>1679</locationY>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.AccountItem__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>1_90</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.AccountingType__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>1</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.Amount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>AmountFormula</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TermStartDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.InvoiceAccount__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.InvoiceDocument__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>DetailInvoiceDocument</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.Item__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>入庫料</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.ProductMaster__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.ProductMaster__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.TargetDepartment__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>倉庫課</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.TermCycleStartDate__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TermCycleStartDate</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.TermArrivedQuantity__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ArrivedQuantity</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>checkUpdateOrInsert</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetDate</name>
        <label>日付を設定</label>
        <locationX>798</locationX>
        <locationY>2411</locationY>
        <assignmentItems>
            <assignToReference>ArrivedDetailRecordDate</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>DeleteListLoop.Date__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CheckIncorrectTermStartDate</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetId</name>
        <label>IDを設定</label>
        <locationX>710</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>ArrivedAccountingDetail.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetArrivedDetail.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetArrivedStock</targetReference>
        </connector>
    </assignments>
    <customErrors>
        <name>DisplayError</name>
        <label>エラー表示</label>
        <locationX>578</locationX>
        <locationY>3119</locationY>
        <customErrorMessages>
            <errorMessage>{!$Flow.FaultMessage}</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>CheckConfirmedInvoice</name>
        <label>処理済み請求書のチェック</label>
        <locationX>402</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>GetDummyInvoiceDocument</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>ConfirmedInvoiceFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetConfirmedInvoice</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <label>請求が処理済み</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckDate</name>
        <label>日付のチェック</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>GetConfirmedInvoice</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>DateBlank</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>TermCycleStartDate</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>TermCycleEndDate</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>TermStartDate</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>TermEndDate</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>日付が空</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckDeleteListQuantity</name>
        <label>削除リストの数量をチェック</label>
        <locationX>578</locationX>
        <locationY>2903</locationY>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>HasRecord</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>DeleteList</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>DeleteArrivedDetail</targetReference>
            </connector>
            <label>&gt;0</label>
        </rules>
    </decisions>
    <decisions>
        <description>例：15日の期制の開始日は ６日、１６日、26日。20日の期制の開始日は 1日、11日、21日。</description>
        <name>CheckIncorrectTermStartDate</name>
        <label>3つの期制の開始日以外チェック</label>
        <locationX>798</locationX>
        <locationY>2519</locationY>
        <defaultConnector>
            <targetReference>DeleteListLoop</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>IncorrectTermStartDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ToBeDeletedFlag</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AddToDeleteList</targetReference>
            </connector>
            <label>期制の開始日以外</label>
        </rules>
    </decisions>
    <decisions>
        <name>checkUpdateOrInsert</name>
        <label>更新と新規をチェック</label>
        <locationX>842</locationX>
        <locationY>1787</locationY>
        <defaultConnector>
            <targetReference>CreateArrivedDetail</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>新規</defaultConnectorLabel>
        <rules>
            <name>hasId</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ArrivedAccountingDetail.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>UpdateArrivedDetail</targetReference>
            </connector>
            <label>更新</label>
        </rules>
    </decisions>
    <decisions>
        <name>GetDateSplit</name>
        <label>日付を取得</label>
        <locationX>1766</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>GetTargetTermEndDate</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>期終了日</defaultConnectorLabel>
        <rules>
            <name>X1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Index</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetTargetTermCycleStartDate</targetReference>
            </connector>
            <label>期制開始日</label>
        </rules>
        <rules>
            <name>X2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Index</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>1.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetTargetTermCycleEndDate</targetReference>
            </connector>
            <label>期制終了日</label>
        </rules>
        <rules>
            <name>X3</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Index</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>2.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetTermStartDate</targetReference>
            </connector>
            <label>期開始日</label>
        </rules>
    </decisions>
    <decisions>
        <name>GetRecordResult</name>
        <label>取得結果</label>
        <locationX>842</locationX>
        <locationY>971</locationY>
        <defaultConnector>
            <targetReference>GetArrivedStock</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>FoundRecord</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetArrivedDetail</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetId</targetReference>
            </connector>
            <label>取得できる</label>
        </rules>
    </decisions>
    <decisions>
        <name>ResultTypeArgCheck</name>
        <label>ResultTypeArgチェック</label>
        <locationX>908</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>ArgsClear</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>BlankResultTypeArg</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ResultTypeArg</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CheckDate</targetReference>
            </connector>
            <label>ResultTypeArgが空</label>
        </rules>
    </decisions>
    <decisions>
        <name>ThirdTermCheck</name>
        <label>3期のチェック</label>
        <locationX>842</locationX>
        <locationY>2087</locationY>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>ThirdTerm</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>TermEndDate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>TermCycleEndDate</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetRecordOfSameTerm</targetReference>
            </connector>
            <label>3期</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>AmountFormula</name>
        <dataType>Currency</dataType>
        <expression>{!ArrivedQuantity} * {!$Record.ProductMaster__r.UnitPriceArrival_F__c}</expression>
        <scale>2</scale>
    </formulas>
    <formulas>
        <name>DetailInvoiceDocument</name>
        <dataType>String</dataType>
        <expression>BLANKVALUE({!GetArrivedDetail.InvoiceDocument__c}, {!GetDummyInvoiceDocument.Id})</expression>
    </formulas>
    <formulas>
        <name>ResultTypeArg</name>
        <dataType>String</dataType>
        <expression>CASE({!Index}, 
0, &quot;TermCycleStart&quot;, 
1, &quot;TermCycleEnd&quot;,
2, &quot;TermStart&quot;,
3, &quot;TermEnd&quot;,
&quot;&quot;)</expression>
    </formulas>
    <formulas>
        <name>StringDate</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Record.ArrivalDate__c})</expression>
    </formulas>
    <formulas>
        <description>TRUE：削除。FALSE:削除しない</description>
        <name>ToBeDeletedFlag</name>
        <dataType>Boolean</dataType>
        <expression>IF(
    ISPICKVAL({!$Record.Account__r.ClosingDate__c}, &quot;MONTH_15&quot;),
    IF(
        DAY({!ArrivedDetailRecordDate}) &lt;&gt; 6
        &amp;&amp; DAY({!ArrivedDetailRecordDate}) &lt;&gt; 16
        &amp;&amp; DAY({!ArrivedDetailRecordDate}) &lt;&gt; 26,
        TRUE,
        FALSE
    ),
    IF(
        DAY({!ArrivedDetailRecordDate}) &lt;&gt; 1
        &amp;&amp; DAY({!ArrivedDetailRecordDate}) &lt;&gt; 11
        &amp;&amp; DAY({!ArrivedDetailRecordDate}) &lt;&gt; 21,
        TRUE,
        FALSE
    )
)</expression>
    </formulas>
    <interviewLabel>在庫情報の請求・支払明細自動転記 {!$Flow.CurrentDateTime}</interviewLabel>
    <label>在庫情報の請求・支払明細自動転記</label>
    <loops>
        <name>ArrivedQuantityLoop</name>
        <label>入庫済み数のループ</label>
        <locationX>842</locationX>
        <locationY>1379</locationY>
        <collectionReference>GetArrivedStock</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AddToArrived</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>InputDetail</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>DeleteListLoop</name>
        <label>削除リストのループ</label>
        <locationX>578</locationX>
        <locationY>2303</locationY>
        <collectionReference>GetRecordOfSameTerm</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SetDate</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>CheckDeleteListQuantity</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateArrivedDetail</name>
        <label>入庫料の明細を作成</label>
        <locationX>974</locationX>
        <locationY>1895</locationY>
        <connector>
            <targetReference>ThirdTermCheck</targetReference>
        </connector>
        <inputReference>ArrivedAccountingDetail</inputReference>
    </recordCreates>
    <recordDeletes>
        <name>DeleteArrivedDetail</name>
        <label>入庫料の明細を削除</label>
        <locationX>314</locationX>
        <locationY>3011</locationY>
        <faultConnector>
            <targetReference>DisplayError</targetReference>
        </faultConnector>
        <inputReference>DeleteList</inputReference>
    </recordDeletes>
    <recordLookups>
        <name>GetArrivedDetail</name>
        <label>入庫料の請求・支払明細を取得</label>
        <locationX>842</locationX>
        <locationY>863</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetRecordResult</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ProductMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ProductMaster__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Date__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>TermStartDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>TermCycleStartDate__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>TermCycleStartDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Item__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>入庫料</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>AccountingDetail__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetArrivedStock</name>
        <label>入庫済み在庫情報を取得</label>
        <locationX>842</locationX>
        <locationY>1271</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ArrivedQuantityLoop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ArrivalDate__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>TermEndDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>ArrivalDate__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>TermStartDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>ProductMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ProductMaster__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Arrived</stringValue>
            </value>
        </filters>
        <filters>
            <field>ArrivalQuantity__c</field>
            <operator>GreaterThan</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>ProductStockInfo__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetConfirmedInvoice</name>
        <label>処理済み請求書を取得</label>
        <locationX>402</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckConfirmedInvoice</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>保管・荷役明細書</stringValue>
            </value>
        </filters>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>InvoiceDate__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>TermCycleEndDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Confirmed</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>InvoiceDocument__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetDummyInvoiceDocument</name>
        <label>Dummy請求書を取得</label>
        <locationX>842</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetArrivedDetail</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>InvoiceDate__c</field>
            <operator>EqualTo</operator>
            <value>
                <dateValue>1900-01-01</dateValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>InvoiceDocument__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRecordOfSameTerm</name>
        <label>期制中のレコードを取得</label>
        <locationX>578</locationX>
        <locationY>2195</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DeleteListLoop</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Item__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>入庫料</stringValue>
            </value>
        </filters>
        <filters>
            <field>Date__c</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>TermStartDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>ProductMaster__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ProductMaster__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>TermEndDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>AccountingDetail__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateArrivedDetail</name>
        <label>入庫料の明細を更新</label>
        <locationX>710</locationX>
        <locationY>1895</locationY>
        <connector>
            <targetReference>ThirdTermCheck</targetReference>
        </connector>
        <inputReference>ArrivedAccountingDetail</inputReference>
    </recordUpdates>
    <start>
        <locationX>782</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>ResultTypeArgCheck</targetReference>
        </connector>
        <filterFormula>AND(		
	OR(	
		ISNEW(),
		ISCHANGED({!$Record.Status__c})
	),
	ISPICKVAL({!$Record.Status__c}, &apos;Arrived&apos;)
)</filterFormula>
        <object>ProductStockInfo__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>Args</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ArrivedAccountingDetail</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountingDetail__c</objectType>
    </variables>
    <variables>
        <description>3つの期制の開始日以外のレコードを削除するため</description>
        <name>ArrivedDetailRecordDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>ArrivedQuantity</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>DeleteList</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountingDetail__c</objectType>
    </variables>
    <variables>
        <name>Index</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>TermCycleEndDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>TermCycleStartDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>TermEndDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>TermStartDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
