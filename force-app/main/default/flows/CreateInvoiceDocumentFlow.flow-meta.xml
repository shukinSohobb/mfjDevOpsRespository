<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>SetInvoiceId01</name>
        <label>新規請求書(明細)Idを設定</label>
        <locationX>50</locationX>
        <locationY>1595</locationY>
        <assignmentItems>
            <assignToReference>InvoiceDocumentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>InsertInvoiceOrPayment</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateAccountingDetail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetInvoiceId02</name>
        <label>請求書(明細)Idを設定</label>
        <locationX>314</locationX>
        <locationY>1487</locationY>
        <assignmentItems>
            <assignToReference>InvoiceDocumentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetRecord.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateAccountingDetail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setNewPaymentDocId</name>
        <label>新規支払書Idを設定</label>
        <locationX>842</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>InvoiceDocumentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>createPaymentRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateAccountingDetail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setPaymentDocId</name>
        <label>支払書Idを設定</label>
        <locationX>1106</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>InvoiceDocumentId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetPaymentRecord.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>UpdateAccountingDetail</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetSummaryInvoiceId</name>
        <label>請求書(合計)Idを設定</label>
        <locationX>512</locationX>
        <locationY>755</locationY>
        <assignmentItems>
            <assignToReference>SummaryInvoiceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getInvoiceDocument.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>getInvoiceType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SetSummaryInvoiceId2</name>
        <label>新規請求書(合計)Idを設定</label>
        <locationX>248</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>SummaryInvoiceId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>InsertSummary</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>getInvoiceType</targetReference>
        </connector>
    </assignments>
    <customErrors>
        <name>NoInvoiceTypeError</name>
        <label>請求書タイプエラー</label>
        <locationX>578</locationX>
        <locationY>1271</locationY>
        <customErrorMessages>
            <errorMessage>対象課が「{!$Record.TargetDepartment__c}」であり、項目が「{!$Record.Item__c}」の仕分明細に紐づく請求書タイプを定義してください。</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>decisionInvoiceDocument</name>
        <label>請求書(合計)を判定</label>
        <locationX>380</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>SetSummaryInvoiceId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>DidNotGet</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getInvoiceDocument</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>InsertSummary</targetReference>
            </connector>
            <label>請求書(合計)がない</label>
        </rules>
    </decisions>
    <decisions>
        <name>decisionInvoiceType</name>
        <label>請求書タイプを判定</label>
        <locationX>380</locationX>
        <locationY>1163</locationY>
        <defaultConnector>
            <targetReference>NoInvoiceTypeError</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>ない</defaultConnectorLabel>
        <rules>
            <name>hasInvoiceType</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getInvoiceType</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetRecord</targetReference>
            </connector>
            <label>ある</label>
        </rules>
    </decisions>
    <decisions>
        <name>decisionPaymentOrInvoice</name>
        <label>請求書と支払書を判定</label>
        <locationX>875</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>その他</defaultConnectorLabel>
        <rules>
            <name>isInvoice</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RecordTypeName_F</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Invoice</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getInvoiceDocument</targetReference>
            </connector>
            <label>請求書</label>
        </rules>
        <rules>
            <name>isPayment</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>RecordTypeName_F</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Payment</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetPaymentRecord</targetReference>
            </connector>
            <label>支払書</label>
        </rules>
    </decisions>
    <decisions>
        <name>decisionPaymentRecord</name>
        <label>支払書を判定</label>
        <locationX>974</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>setPaymentDocId</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>noPaymentRecord</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetPaymentRecord</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>createPaymentRecord</targetReference>
            </connector>
            <label>支払書がない</label>
        </rules>
    </decisions>
    <decisions>
        <name>RecordCheck</name>
        <label>請求書(明細)を判定</label>
        <locationX>182</locationX>
        <locationY>1379</locationY>
        <defaultConnector>
            <targetReference>SetInvoiceId02</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>DidNotGetRecord</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetRecord</leftValueReference>
                <operator>IsBlank</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>InsertInvoiceOrPayment</targetReference>
            </connector>
            <label>請求書(明細)がない</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>NextMonth_F</name>
        <dataType>Date</dataType>
        <expression>ADDMONTHS({!$Record.ClosingDate__c},1)</expression>
    </formulas>
    <formulas>
        <name>RecordTypeName_F</name>
        <dataType>String</dataType>
        <expression>CASE({!$Record.AccountingType__c}, 
     &quot;1&quot;, &quot;Invoice&quot;,
     &quot;2&quot;, &quot;Payment&quot;,
     NULL)</expression>
    </formulas>
    <interviewLabel>請求書支払書作成フロー {!$Flow.CurrentDateTime}</interviewLabel>
    <label>請求書支払書作成フロー</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>createPaymentRecord</name>
        <label>支払書を作成</label>
        <locationX>842</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>setNewPaymentDocId</targetReference>
        </connector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>$Record.InvoiceAccount__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>InvoiceDate__c</field>
            <value>
                <elementReference>$Record.ClosingDate__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>getRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Confirm</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type__c</field>
            <value>
                <stringValue>支払書</stringValue>
            </value>
        </inputAssignments>
        <object>InvoiceDocument__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>InsertInvoiceOrPayment</name>
        <label>請求書(明細)を作成</label>
        <locationX>50</locationX>
        <locationY>1487</locationY>
        <connector>
            <targetReference>SetInvoiceId01</targetReference>
        </connector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>$Record.InvoiceAccount__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>InvoiceDate__c</field>
            <value>
                <elementReference>$Record.ClosingDate__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>getRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Confirm</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>TotalSummaryDocument__c</field>
            <value>
                <elementReference>SummaryInvoiceId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type__c</field>
            <value>
                <elementReference>getInvoiceType.InvoiceDocumentType__c</elementReference>
            </value>
        </inputAssignments>
        <object>InvoiceDocument__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>InsertSummary</name>
        <label>請求書(合計)を作成</label>
        <locationX>248</locationX>
        <locationY>755</locationY>
        <connector>
            <targetReference>SetSummaryInvoiceId2</targetReference>
        </connector>
        <inputAssignments>
            <field>Account__c</field>
            <value>
                <elementReference>$Record.InvoiceAccount__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>InvoiceDate__c</field>
            <value>
                <elementReference>$Record.ClosingDate__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>getRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status__c</field>
            <value>
                <stringValue>Confirm</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type__c</field>
            <value>
                <stringValue>請求書</stringValue>
            </value>
        </inputAssignments>
        <object>InvoiceDocument__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>getInvoiceDocument</name>
        <label>請求書(合計)を取得</label>
        <locationX>380</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decisionInvoiceDocument</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>InvoiceDate__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ClosingDate__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.InvoiceAccount__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getRecordTypeId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>請求書</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>InvoiceDocument__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getInvoiceType</name>
        <label>請求書タイプを取得</label>
        <locationX>380</locationX>
        <locationY>1055</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decisionInvoiceType</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>TargetDepartment__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.TargetDepartment__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>AccountingDetailItem__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Item__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>InvoiceDocumentTypeMap__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetPaymentRecord</name>
        <label>支払書を取得</label>
        <locationX>974</locationX>
        <locationY>539</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decisionPaymentRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>InvoiceDate__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ClosingDate__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.InvoiceAccount__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getRecordTypeId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>支払書</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>InvoiceDocument__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetRecord</name>
        <label>請求書(明細)を取得</label>
        <locationX>182</locationX>
        <locationY>1271</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>RecordCheck</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>InvoiceDate__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.ClosingDate__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.InvoiceAccount__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getRecordTypeId.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getInvoiceType.InvoiceDocumentType__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>InvoiceDocument__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getRecordTypeId</name>
        <label>レコードタイプ取得</label>
        <locationX>875</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>decisionPaymentOrInvoice</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>RecordTypeName_F</elementReference>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>InvoiceDocument__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateAccountingDetail</name>
        <label>仕分明細の請求書項目を更新</label>
        <locationX>875</locationX>
        <locationY>1955</locationY>
        <inputAssignments>
            <field>InvoiceDocument__c</field>
            <value>
                <elementReference>InvoiceDocumentId</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>749</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getRecordTypeId</targetReference>
        </connector>
        <filterFormula>AND(
    OR(
        ISNEW(),  /* 新規作成の場合 */
        ISCHANGED({!$Record.ClosingDate__c})  /*締め日が変更された場合 */
    ),
    OR(
        ISBLANK({!$Record.OrderHeader__c}),
        AND(
            NOT(ISBLANK({!$Record.OrderHeader__c})),
            NOT({!$Record.OrderHeader__r.BillingPriceConfirmed__c})  /* 請求不可がfalse場合 */
        )
    ),
    NOT(ISBLANK({!$Record.InvoiceAccount__c}))  /* 取引先が空でない場合 */
)</filterFormula>
        <object>AccountingDetail__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>InvoiceDocumentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SummaryInvoiceId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
