<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>63.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>AddProductIDToCollection</name>
        <label>商品マスタのIDをコレクションに追加</label>
        <locationX>270</locationX>
        <locationY>503</locationY>
        <assignmentItems>
            <assignToReference>ProductMasterIdCollection</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>OneDetail.ProductMaster__r.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>OneDetail</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>CanBeAllocable</name>
        <label>Firstロットの引当可能</label>
        <locationX>182</locationX>
        <locationY>911</locationY>
        <defaultConnectorLabel>デフォルトの結果</defaultConnectorLabel>
        <rules>
            <name>HaveAtleastOne</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetProductStock</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetToOrderhead</targetReference>
            </connector>
            <label>在庫情報１つ以上ある</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Firstロットの注文設定 {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Firstロットの注文設定</label>
    <loops>
        <name>OneDetail</name>
        <label>１つの注文明細</label>
        <locationX>182</locationX>
        <locationY>395</locationY>
        <collectionReference>GetAllDetails</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>AddProductIDToCollection</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>GetProductStock</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>GetAllDetails</name>
        <label>全て注文明細取得</label>
        <locationX>182</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>OneDetail</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderHeader__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OrderDetail__c</object>
        <queriedFields>ProductMaster__c</queriedFields>
        <queriedFields>Quantity__c</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetProductStock</name>
        <label>在庫情報取得</label>
        <locationX>182</locationX>
        <locationY>695</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetStock</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ProductMaster__c</field>
            <operator>In</operator>
            <value>
                <elementReference>ProductMasterIdCollection</elementReference>
            </value>
        </filters>
        <filters>
            <field>AllocableQuantity_F__c</field>
            <operator>GreaterThan</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProductStockInfo__c</object>
        <sortField>ArrivalDate__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetStock</name>
        <label>倉庫名取得</label>
        <locationX>182</locationX>
        <locationY>803</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CanBeAllocable</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetProductStock.WarehouseMaster__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>WarehouseMaster__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Firstロットの情報を注文の「倉庫名」と「ロット番号」へ反映する</description>
        <name>SetToOrderhead</name>
        <label>Firstロットの情報を注文に反映</label>
        <locationX>50</locationX>
        <locationY>1019</locationY>
        <inputAssignments>
            <field>LotNumber__c</field>
            <value>
                <elementReference>GetProductStock.LotNumber__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WarehouseMasterName__c</field>
            <value>
                <elementReference>GetStock.Name</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>GetAllDetails</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>ReceptionCompleted</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status__c</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>OrderHeader__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>ProductMasterIdCollection</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
