<?xml version="1.0" encoding="UTF-8"?>
<WebLink xmlns="http://soap.sforce.com/2006/04/metadata">
    <fullName>SVFInvoiceDocumentcListButton20250407054604461Rcn</fullName>
    <availability>online</availability>
    <displayType>massActionButton</displayType>
    <linkType>javascript</linkType>
    <masterLabel>運送請求書 - 帳票</masterLabel>
    <openType>onClickJavaScript</openType>
    <protected>false</protected>
    <requireRowSelection>true</requireRowSelection>
    <url>/**
 * SVF Button for ListView onClick JavaScript
 *
 * Generated by SVF Cloud. Do not edit.
 *
 * @version 1.2.11-SNAPSHOT
 */
{!REQUIRESCRIPT(&apos;//repo.svfcloud.com/service/sfdc/release-rg/lib/js/jquery-1.8.3.min.js&apos;)};
{!REQUIRESCRIPT(&apos;/soap/ajax/58.0/connection.js&apos;)};
{!REQUIRESCRIPT(&apos;/soap/ajax/58.0/apex.js&apos;)};
{!REQUIRESCRIPT(&apos;/resource/&apos; &amp;  LEFT(SUBSTITUTE(SUBSTITUTE(SUBSTITUTE(TEXT(NOW()),&apos;:&apos;,&apos;&apos;),&apos;-&apos;,&apos;&apos;),&apos; &apos;,&apos;&apos;),10) &amp; &apos;000/svfcloud__SVFPreviewJS&apos;)}

var ids = {!GETRECORDIDS($ObjectType.InvoiceDocument__c)};
var printed_cnt = 0;

var buttonsJson = &apos;{&quot;fullName&quot;:&quot;SVFInvoiceDocumentcButton20250407054604461Rcn&quot;,&quot;label&quot;:&quot;運送明細書 - 帳票&quot;,&quot;previewSkip&quot;:false}&apos;;
if ( console &amp;&amp; console.log ) console.log(&apos;svfc button: &apos;+buttonsJson);

if (ids != &quot;&quot;){
   var executable = true;
   var button = JSON.parse(buttonsJson);
   var printedFlg = (button.forbiddenField != null)
    ? button.forbiddenField
    : &quot;&quot;;

   if(printedFlg.length &gt; 0 &amp;&amp; printedFlg!=&quot;&quot;){
     try{
       var sobjects = sforce.connection.retrieve(&quot;Id,&quot;+printedFlg, &quot;InvoiceDocument__c&quot;, ids);
       if(printedFlg!=&quot;&quot;){
         for (var i=0; i &lt; sobjects.length; i++) {
           if(sobjects[i].get(printedFlg) == &quot;true&quot;) printed_cnt++;
         }
       }
     } catch (e){
       if(e.toString().includes(&quot;sf:INVALID_FIELD&quot;)){
         var indexColumn = e.toString().indexOf(&quot;No such column &quot;,0);
         var endOfColumn = e.toString().indexOf(&quot; on entity &quot;,indexColumn+15);
         var invalid_field = e.toString().substring(indexColumn+15,endOfColumn);
         alert(&quot;\u5FC5\u8981\u306A\u9805\u76EE\u306B\u30A2\u30AF\u30BB\u30B9\u51FA\u6765\u307E\u305B\u3093\u3002\u7BA1\u7406\u8005\u306B\u304A\u554F\u5408\u305B\u4E0B\u3055\u3044\u3002 You can not access the required fields.Please contact your administrator.Field=[&quot;+invalid_field+&quot;]&quot;);
       }
       executable = false;
     }
   }
   if(&quot;InvoiceDocument__c&quot;===&quot;Event&quot; || &quot;InvoiceDocument__c&quot;===&quot;Task&quot;){
     var eventCount = 0;
     for (var i=0; i &lt; ids.length; i++) {
       if(ids[i].substr(0,3)==&apos;00U&apos;) eventCount++;
     }
     if((&quot;InvoiceDocument__c&quot;===&quot;Event&quot; &amp;&amp; ids.length != eventCount)||(&quot;InvoiceDocument__c&quot;===&quot;Task&quot; &amp;&amp; eventCount &gt; 0)){
       alert(&quot;\u5370\u5237\u5BFE\u8C61\u306B\u30DC\u30BF\u30F3\u306E\u7A2E\u5225\uFF08InvoiceDocument__c\uFF09\u578B\u4EE5\u5916\u306E\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u9078\u629E\u3055\u308C\u3066\u3044\u307E\u3059\u3002 The target includes records other than InvoiceDocument__c types.&quot;);
       executable = false;
     }
   }

   if( ids.length==printed_cnt ){ alert(&quot;\u51fa\u529b\u3092\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 Outputting is not allowed for some records.&quot;); executable = false;}
   else if( printed_cnt &gt; 0){ alert(&quot;\u51fa\u529b\u3092\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 Outputting is not allowed for some records.&quot;); executable = false;}
  if(executable){
    (function callout(){
      var target = &quot;svfpreview_&quot; + new Date().getTime();
      var screenLeft = window.screenX;
      var screenTop = window.screenY;

      var sortKey = &quot;&quot;;
      var dir = &quot;&quot;;
      var returnUrl = $(&quot;#retURL&quot;).val();
      if (returnUrl) {
        var instanceId = returnUrl.replace(/^[^?]*[?][^=]*=([^&amp;]*).*/, &quot;$1&quot;);
        if (instanceId) {
          var viewport = ListViewport.instances[instanceId];
          if (viewport &amp;&amp; viewport.grid) {
            var sortState = viewport.grid.getView().sortState;
            var colModel = viewport.grid.getColumnModel();
            if (sortState &amp;&amp; colModel) {
              var field = sortState.field;
              if (field) {
                var col = colModel.getColumnsBy(function(config) {
                  return field === config.dataIndex;
                });
                if (col &amp;&amp; col[0]) {
                  sortKey = col[0].dataIndex.replace(/_/g,&apos;&apos;);
                  dir = sortState.dir;
                }
              }
            }
          }
        }

        if (sortKey == &quot;&quot; &amp;&amp; typeof searchResultClick !== &quot;undefined&quot;) {
          if(searchResultClick.clickResults){
            var sortState = searchResultClick.clickResults.sorts[&quot;InvoiceDocument__c&quot;];
            if(sortState){
              sortKey = sortState.substring(0,sortState.indexOf(&quot;=&quot;));
              dir = sortState.substr(sortState.indexOf(&quot;=&quot;),1);
              (dir == 1)? dir = &quot;ASC&quot; : dir = &quot;DESC&quot;;
            } else {
              sortKey = &quot;InvoiceDocument__c.Name&quot;;
              dir = &quot;ASC&quot;;
            }
          }
        }
      }

      var form = document.createElement(&quot;form&quot;);
      form.method = &quot;POST&quot;;
      form.action = &quot;https://sfdc3.svfcloud.com/svf-cloud-service/sfdc/callout&quot;;
      form.target = target;

      var input;
      input = document.createElement(&quot;input&quot;);
      input.setAttribute(&quot;name&quot;, &quot;callback&quot;);
      input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);
      input.setAttribute(&quot;value&quot;, &quot;{!LEFT($Api.Partner_Server_URL_580,FIND(&apos;/services/Soap/&apos;, $Api.Partner_Server_URL_580)-1)}/apex/svfcloud__PreviewPage&quot;);
      form.appendChild(input);

      input = document.createElement(&quot;input&quot;);
      input.setAttribute(&quot;name&quot;, &quot;appId&quot;);
      input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);
      input.setAttribute(&quot;value&quot;, &quot;InvoiceDocument__c&quot;);
      form.appendChild(input);

      input = document.createElement(&quot;input&quot;);
      input.setAttribute(&quot;name&quot;, &quot;ids&quot;);
      input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);
      input.setAttribute(&quot;value&quot;, ids.toString());
      form.appendChild(input);

      input = document.createElement(&quot;input&quot;);
      input.setAttribute(&quot;name&quot;, &quot;sortKey&quot;);
      input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);
      input.setAttribute(&quot;value&quot;, sortKey);
      form.appendChild(input);

      input = document.createElement(&quot;input&quot;);
      input.setAttribute(&quot;name&quot;, &quot;dir&quot;);
      input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);
      input.setAttribute(&quot;value&quot;, dir);
      form.appendChild(input);

      input = document.createElement(&quot;input&quot;);
      input.setAttribute(&quot;name&quot;, &quot;uniqueName&quot;);
      input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);
      input.setAttribute(&quot;value&quot;, button.fullName);
      form.appendChild(input);

      if(printedFlg){
            input = document.createElement(&quot;input&quot;);
            input.setAttribute(&quot;name&quot;, &quot;printedFlg&quot;);
            input.setAttribute(&quot;type&quot;, &quot;hidden&quot;);
            input.setAttribute(&quot;value&quot;, printedFlg);
            form.appendChild(input);
      }

      function formSubmit() {
        var body = document.getElementsByTagName(&quot;body&quot;)[0];
        body.appendChild(form);
        form.submit();
        body.removeChild(form);
      }
      if ( button.previewSkip ) {
        var ifrmePreview = svfcPreview.createIFramePreview();
        ifrmePreview.start(element.title, &apos;SVFInvoiceDocumentcButton20250407054604461Rcn&apos;, element, target, &apos;classic&apos;, formSubmit);
      } else {
        var popup = window.open(&quot;about:blank&quot;, target, &quot;menubar=no, toolbar=no, scrollbars=yes, resizable=yes, width=600, height=300, top=&quot; + screenTop + &quot;, left=&quot; + screenLeft);
        if ( popup ) {
          popup.focus();
          formSubmit();
        }
      }

    })();
  }
} else {
  alert(&quot;Not selected!&quot;);
}</url>
</WebLink>
